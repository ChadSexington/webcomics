inherit_from: .rubocop_todo.yml

AllCops:
  TargetRubyVersion: 2.3
  Exclude:
    - '**/templates/**/*'
    - '**/vendor/**/*'
    - '**tmp/**/*'
    - 'actionpack/lib/action_dispatch/journey/parser.rb'

# Use a more relaxed line length requirement
Metrics/LineLength:
  Max: 100

Metrics/BlockLength:
  Max: 100
  Exclude:
    - '**/spec/**/*'

# Prefer &&/|| over and/or.
Style/AndOr:
  Enabled: true

# Allow {:foo => bar} or {foo: bar} but not {:foo => bar, foobar: baz}
Style/HashSyntax:
  EnforcedStyle: 'no_mixed_keys'

# Do not use braces for hash literals when they are the last argument of a
# method call.
Style/BracesAroundHashParameters:
  Enabled: true
  EnforcedStyle: context_dependent

# Allow empty lines around bodies for readability
Style/EmptyLinesAroundBlockBody:
  Enabled: false

# Align `when` with `case`.
Layout/CaseIndentation:
  Enabled: true

# Align comments with method definitions.
Layout/CommentIndentation:
  Enabled: true

Layout/EmptyLineAfterMagicComment:
  Enabled: true

# In a block, allow empty lines around body
Layout/EmptyLinesAroundBlockBody:
  Enable: false

# In a regular class definition, no empty lines around the body.
Layout/EmptyLinesAroundClassBody:
  Enabled: true

# In a regular method definition, no empty lines around the body.
Layout/EmptyLinesAroundMethodBody:
  Enabled: true

# In a regular module definition, no empty lines around the body.
Layout/EmptyLinesAroundModuleBody:
  Enabled: true

Layout/FirstParameterIndentation:
  Enabled: true

# Use Ruby >= 1.9 syntax for hashes. Prefer { a: :b } over { :a => :b }.
Style/HashSyntax:
  Enabled: true

# Method definitions after `private` or `protected` isolated calls need no identation
Layout/IndentationConsistency:
  Enabled: false

# Two spaces, no tabs (for indentation).
Layout/IndentationWidth:
  Enabled: true

Layout/SpaceAfterColon:
  Enabled: true

Layout/SpaceAfterComma:
  Enabled: true

Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: true

Layout/SpaceAroundKeyword:
  Enabled: true

Layout/SpaceAroundOperators:
  Enabled: true

Layout/SpaceBeforeFirstArg:
    Enabled: true

# Defining a method with parameters needs parentheses.
Style/MethodDefParentheses:
  Enabled: true

Style/FrozenStringLiteralComment:
  Enabled: false

# Use `foo {}` not `foo{}`.
Layout/SpaceBeforeBlockBraces:
  Enabled: true

# Use `foo { bar }` not `foo {bar}`.
Layout/SpaceInsideBlockBraces:
  Enabled: true

# Use `{ a: 1 }` not `{a:1}`.
Layout/SpaceInsideHashLiteralBraces:
  Enabled: true

Layout/SpaceInsideParens:
  Enabled: true

# Check quotes usage according to lint rule below.
Style/StringLiterals:
  Enabled: true
  EnforcedStyle: single_quotes

# Detect hard tabs, no hard tabs.
Layout/Tab:
  Enabled: true

# Blank lines should not have any spaces.
Layout/TrailingBlankLines:
  Enabled: true

# No trailing whitespace.
Layout/TrailingWhitespace:
  Enabled: true

# Use quotes for string literals when they are enough.
Style/UnneededPercentQ:
  Enabled: true

# Align `end` with the matching keyword or starting expression except for
# assignments, where it should be aligned with the LHS.
Lint/EndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: variable

# Use my_method(my_arg) not my_method( my_arg ) or my_method my_arg.
Lint/RequireParentheses:
  Enabled: true

Style/RedundantReturn:
  Enabled: true
  AllowMultipleReturnValues: true

Style/Semicolon:
  Enabled: true
  AllowAsExpressionSeparator: true
